" Plugin Manager - https://github.com/VundleVim/Vundle.vim

" NOTE: remember - default <Leader> symbol is either '/' or ','

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"Keep Plugin commands between vundle#begin/end.
Plugin 'xolox/vim-misc' "colorscheme-switcher helper
Plugin 'xolox/vim-colorscheme-switcher' "colorscheme switcher
Plugin 'flazz/vim-colorschemes' " better colorschemes
Plugin 'embark-theme/vim'
Plugin 'ycm-core/YouCompleteMe' " C++ autocomplete
Plugin 'preservim/nerdtree' " Ctrl + n
" Plugin 'jiangmiao/auto-pairs'
Plugin 'tpope/vim-fugitive' " Git: commands: blame, diff, log, add, ...(https://github.com/tpope/vim-fugitive)
Plugin 'airblade/vim-gitgutter' " Git changes in code. Parameter below is set to 100
Plugin 'ctrlpvim/ctrlp.vim' " https://github.com/ctrlpvim/ctrlp.vim "just ctrl + p
Plugin 'vim-airline/vim-airline' " Cool status line
" Plugin 'vim-airline/vim-airline-themes'
Plugin 'easymotion/vim-easymotion' " LLs, LLf, LLw, LLl (L - Leader symbol)
" Plugin 'ilyachur/cmake4vim' "cmake integration : https://github.com/ilyachur/cmake4vim
Plugin 'terryma/vim-smooth-scroll' " ctrl+u|d|f|b (f|b - page, u|d - smooth)
Plugin 'preservim/tagbar' " ctrl + F9
" Plugin https://github.com/ludovicchabant/vim-gutentags
Plugin 'octol/vim-cpp-enhanced-highlight' " better code highlight. params below
" Plugin 'vim-syntastic/syntastic' " maybe conflict with ycm
" Plugin 'preservim/nerdcommenter' " comment functions
Plugin 'tpope/vim-commentary' " comment lines. file types support. gc, gcc.

" All of your Plugins must be added before the following line
call vundle#end()            " required
" set runtimepath+=~/.vim/bundle/YouCompleteMe/
filetype plugin indent on    " required

" PLUGINS END

" switch between hpp, cpp, tpp
map <F4> :e %:p:s,.hpp$,.X123X,:s,.cpp$,.hpp,:s,.X123X$,.cpp,<CR>
map <F3> :e %:p:s,.hpp$,.X123X,:s,.tpp$,.hpp,:s,.X123X$,.tpp,<CR>

" next/prev tab
map <F6> :tabp<CR>
map <F7> :tabn<CR>

" remove trailing spaces
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

" add tags, navigate with ctrl+] (forward), ctrl+t (back), rerun before usage
set tags+=~/tags

" render tpp as cpp
autocmd BufEnter *.tpp :setlocal filetype=cpp

" encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8

" indent width
set shiftwidth=2
set smartindent
set autoindent
set cindent

" tab width and smarttab
set softtabstop=2
set expandtab
set smarttab

" search highlight all/off
set hlsearch
nnoremap <C-L> :nohlsearch<CR>

" misc
set number " enumerate lines
set showmatch " highlight matching parenthesis
set backspace=indent,eol,start " smart backspace
set undolevels=1000 " undo amount

" misc misc
syntax on

" colorscheme elflord
" colorscheme molokai
colorscheme monokai-phoenix
" colorscheme embark 

" nnoremap <leader>n :NERDTreeFocus<CR>
" nnoremap <C-n> :NERDTree<CR>
nnoremap <C-n> :NERDTreeToggle<CR> " do not use this, screws up ctags navigation
" nnoremap <C-f> :NERDTreeFind<CR> " doesnt work properly

set belloff=all " disable blink (visual bell)

" no need with vim-commentary
" " comment
" vnoremap <C-m> :norm i//<CR>
" " uncomment
" vnoremap <S-m> :norm xx<CR>
" " noremap <leader>/ :Commentary<cr>

" gitgutter update faster
set updatetime=100

" airline add tab bars
let g:airline#extensions#tabline#enabled = 1

" autogenerate ctags
" https://kulkarniamit.github.io/whatwhyhow/howto/use-vim-ctags.html
" https://stackoverflow.com/questions/155449/vim-auto-generate-ctags
au BufWritePost *.c,*.cpp,*.h silent! !ctags -R &

" vim-smooth-scroll
noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>

" TagBar
map <F9> :TagbarToggle<CR>

" Code highlight
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_posix_standard = 1
let g:cpp_experimental_simple_template_highlight = 1
let g:cpp_concepts_highlight = 1
let g:cpp_no_function_highlight = 1
"let c_no_curly_error=1

" easymotion
map <Leader><Leader>l <Plug>(easymotion-bd-jk)

" syntastic
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0

"for autocomplete:
"cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
"cp compile_commands.json to project root
"for ctags:
"look at ~/.ctags
